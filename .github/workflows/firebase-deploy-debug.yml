name: Firebase Deploy Debug

on:
  workflow_dispatch:
    inputs:
      do_deploy:
        description: 'Set to true to run deploy steps'
        required: false
        default: 'false'
      channel:
        description: 'Channel name for preview'
        required: false
        default: 'pr-debug'

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci --prefix web

      - name: Build and export
        run: |
          npm run build --prefix web
          npm run export --prefix web

      - name: Prepare public
        run: |
          rm -rf public || true
          mkdir -p public
          cp -a web/out/. public/
          ls -la public | sed -n '1,120p'

      - name: Print debug info
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "Secrets:"
          echo "  FIREBASE_SERVICE_ACCOUNT_NEW_ORDER_NAVIGATOR=${{ secrets.FIREBASE_SERVICE_ACCOUNT_NEW_ORDER_NAVIGATOR != '' }}"
          echo "  Firebase_cli=${{ secrets.Firebase_cli != '' }}"
          echo "  FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN != '' }}"

      - name: Install firebase-tools
        run: npm install -g firebase-tools

      - name: Optional Deploy (action)
        if: ${{ github.event.inputs.do_deploy == 'true' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_NEW_ORDER_NAVIGATOR }}'
          channelId: ${{ github.event.inputs.channel }}

      - name: Optional Deploy (cli)
        if: ${{ github.event.inputs.do_deploy == 'true' && (!secrets.FIREBASE_SERVICE_ACCOUNT_NEW_ORDER_NAVIGATOR) }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          CHANNEL: ${{ github.event.inputs.channel }}
        run: |
          if [ "$CHANNEL" != "live" ]; then
            firebase hosting:channel:deploy "$CHANNEL" --token "$FIREBASE_TOKEN"
          else
            firebase deploy --only hosting --token "$FIREBASE_TOKEN"
          fi
